name: Weekly Contributor Leaderboard

on:
  schedule:
    - cron: '0 0 * * 1'  # Every Monday at midnight UTC
  workflow_dispatch:  # Allows manual triggering

jobs:
  update-leaderboard:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch contributor stats and update leaderboard
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get a list of contributors and their commits
          echo "Fetching contributor stats..."
          
          # Set date range for the past week (change if necessary)
          since_date=$(date -d 'last Monday' --utc +%Y-%m-%dT%H:%M:%SZ)
          until_date=$(date --utc +%Y-%m-%dT%H:%M:%SZ)
          
          # Initialize leaderboard markdown file
          echo "# Weekly Contributor Leaderboard" > leaderboard.md
          echo "" >> leaderboard.md
          echo "| Contributor | Commits | Issues | Pull Requests | Reviews | Badge |" >> leaderboard.md
          echo "|-------------|---------|---------|---------------|---------|-------|" >> leaderboard.md
          
          # Create a temporary file to store contributor data
          declare -A contributor_data

          # Fetch commits for the past week
          contributors_commits=$(curl -s \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/commits?since=$since_date&until=$until_date")

          # Process commits
          echo "$contributors_commits" | jq -r '.[] | .author.login' | sort | uniq -c | while read count login; do
            if [ ! -z "$login" ]; then
              contributor_data["$login,commits"]=$count
            fi
          done

          # Fetch issues created for the past week
          contributors_issues=$(curl -s \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues?state=all&since=$since_date&until=$until_date")

          # Process issues (excluding PRs)
          echo "$contributors_issues" | jq -r '.[] | select(.pull_request == null) | .user.login' | sort | uniq -c | while read count login; do
            if [ ! -z "$login" ]; then
              contributor_data["$login,issues"]=$count
            fi
          done

          # Fetch PRs created for the past week
          contributors_prs=$(curl -s \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls?state=all&since=$since_date&until=$until_date")

          # Process PRs
          echo "$contributors_prs" | jq -r '.[] | .user.login' | sort | uniq -c | while read count login; do
            if [ ! -z "$login" ]; then
              contributor_data["$login,prs"]=$count
            fi
          done

          # Function to determine badge
          get_badge() {
            local commits=$1
            local issues=$2
            local prs=$3
            
            if [ "$commits" -gt 10 ]; then
              echo "Top Contributor"
            elif [ "$commits" -gt 5 ]; then
              echo "Rising Star"
            elif [ "$commits" -gt 2 ]; then
              echo "Consistent Contributor"
            elif [ "$issues" -gt 5 ]; then
              echo "Issue Master"
            elif [ "$issues" -gt 2 ]; then
              echo "Active Issue Creator"
            elif [ "$prs" -gt 5 ]; then
              echo "PR Master"
            elif [ "$prs" -gt 2 ]; then
              echo "Active PR Contributor"
            else
              echo "No Badge"
            fi
          }

          # Combine all unique contributors and write to leaderboard
          for key in "${!contributor_data[@]}"; do
            login=${key%,*}
            type=${key#*,}
            
            commits=${contributor_data["$login,commits"]:-0}
            issues=${contributor_data["$login,issues"]:-0}
            prs=${contributor_data["$login,prs"]:-0}
            reviews=0  # placeholder for future implementation
            
            badge=$(get_badge "$commits" "$issues" "$prs")
            
            # Only add each contributor once
            if ! grep -q "| @$login |" leaderboard.md; then
              echo "| @$login | $commits | $issues | $prs | $reviews | $badge |" >> leaderboard.md
            fi
          done

          # Sort the leaderboard by total contributions (excluding header)
          (head -n 4 leaderboard.md && tail -n +5 leaderboard.md | sort -t'|' -k2 -nr) > leaderboard.tmp
          mv leaderboard.tmp leaderboard.md

          # Commit and push changes if there are updates
          git config --global user.name "GitHub Actions"
          git config --global user.email "action@github.com"
          git diff --exit-code leaderboard.md || (git add leaderboard.md && git commit -m "🔁 Weekly leaderboard update with badges" && git push)